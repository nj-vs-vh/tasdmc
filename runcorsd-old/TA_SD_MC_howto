+ 1. Создание файлов CORSIKA

Для этого потребуются скрипты Димы runcorsd, которые есть на ta.inr.ac.ru:/home/ivanov/ta/prog/runcorsd.

cd runcorsd
mkdir infiles

Запускаем команду:

./gen_infiles_primary.sh #первичная_частица# #директория_для_файлов# #E_min# #E_max# #модель#

Если после E_max ничего не стоит, то модель будет QGSJET, альтернативно можно задать EPOS (непонятно, что это меняет в самой карточке).

Например:

./gen_infiles_primary.sh proton infiles 17.5 20.5

или

./gen_infiles_primary.sh iron infiles 17.5 20.5 EPOS

NOTE! Если CORSIKA собрана с моделью низкоэнергетичных взаимодействий URQMD, инпут-файлы, которые дает код gen_infiles_primary.sh не будут обрабатываться CORSIKA. Проблема в параметре ELCUT(1), который отвечает за обрезание адронов по энергии снизу. Для модели FLUKA срабатывает ELCUT(1) = 0.05 (ГэВ), как выдает код gen_infiles_primary.sh. Для модели URQMD необходимо сделать его равным ELCUT(1) = 0.3.

Например, заменив строчку следующим кодом в соответствующей папке:

sed -i 's/ECUTS   0.05  0.05  0.00025  0.00025/ECUTS   0.3  0.05  0.00025  0.00025/g' *.in

+ 2. Запуск CORSIKA

export RUNCORSD_BINDIR=/storage/vol2/zhezher/corsika-77100/run

cd runcorsd

Нужно иметь где-то в окрестности набор кодов Димы sdanalysis_2019 (например, лежит на ta@cluster.inr.ac.ru:/home/ivanov/ta/prog/sdanalysis_2019). Эти коды должны быть также скомпилированы командами make clean и make, для компиляции требуется ROOT.

make clean
make

Возможно, нужно будет сделать что-то вроде export DSTDIR=/storage/vol2/zhezher/sdmc/prog/sdanalysis_2019_alpha/dst2k-ta.

export COMMON_RESOURCE_DIRECTORY_LOCAL=/storage/vol2/zhezher/corsika-77100/run

Скопировать в эту же папку файл corsika_env.sh, например с cluster56:/storage/vol2/zhezher/corsika-77100/run. В нем прописать соответствующие переменные (бинарный файл CORSIKA, версия, адронная модель). Сделать source corsika_env.sh.
 
Также в папку вроде /storage/vol2/zhezher/corsika-77100/run необходимо скопировать файл sdgeant.dst. Есть, например, на 
cluster56:/storage/vol3/zhezher/corsika-77100/run

Где-то нужно создать папки для pro- и output-файлов:

mdkir pro
mkdir gmd

Для параллельного запуска есть мини-скрипт run_corsika_parallel.sh. Можно скачать, например, с cluster56:/storage/vol2/zhezher/sdmc_ur/runcorsd/run_corsika_parallel.sh. Этот скрипт пишет список in-файлов в файл filelist.txt, делит его на N частей (необходимо уточнять в коде) и запускает каждую часть параллельно. Также в нем прописаны все environmental-переменные, описанные выше.

+ 3. Создание калибровочных файлов sdcalib*bin (optional)

Данные файлы содержат калибровочную информацию, необходимую для набрасывания событий на "реальный" детектор.

В папке с наиболее поздним вариантом скриптов Димы (sdanalysis_2019_alpha/bin) есть скрипт ./sdmc_calib_extract.run.

Данному скрипту требуются на вход dst-калибровочные файлы на каждый день работы решетки, они лежат на кластере ICRR:

/ta/DSTbank/SD/Calib-2/calib/tasdcalib_pass2_??????.dst

и файл с некими константами:

/ta/DSTbank/SD/Calib-2/const/tasdconst_pass2.dst

Есть скрипт sdcalib.sh, который на кластере ICRR сделает калибровочные файлы на каждый месяц для 11 лет работы данных:

/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha/bin/sdcalib.sh

Он запускается без каких-либо параметров. Для большего времени работы его будет необходимо немного (несильно) подправить.

Данные файлы должны лежать в папке:

/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha

+ 4. Создание *tothrow-файлов

Скрипт sdmc_prep_sdmc_run создает к файлам *gea или файлам *tar.gz карточки, которые показывают, сколько раз тот или иной файл будет необходимо набросить на решетку SD.

Он запускается следующей командой:

./sdmc_prep_sdmc_run /path_to_files/*gea.dat -outdir /path_to_outdir/

Note: *gea-файлы скорей всего были получены скриптами Бена, более новые скрипты Димы создают *tar.gz-файлы, в котором содержится *gea-файл, input- и output-файлы CORSIKA и т.п.

Можно проверить работу скрипта следующим образом: для разных энергий он должен накидывать файлы разное количество раз на решетку (число записано в самом *tothrow-файле).

Note2: на кластере ICRR (/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha/bin) лежит измененная версия скрипта sdmc_prep_sdmc_run, которая игнорирует ошибку чтения в *tar.gz-файлах. Эта ошибка появилась исключительно на кластере ICRR и я не знаю, с чем она связана.

5. Создание *dst-файлов: накидывание ливней на реальную решетку.

Возможно, на кластере ICRR необходимо загрузить следующие модули для правильной работы скриптов:

module load gcc/5.4.0
source /usr/local/gcc485/ROOT/5.34.36/bin/thisroot.sh

Необходимо задать два пути к папкам, которые указывают на папку со скриптами Димы:

export COMMON_RESOURCE_DIRECTORY_LOCAL=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha

export SDDIR=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha

В данной папке должны быть sdcalib-файлы и файл atmos.bin.

В папке с файлами *tothrow необходимо создать папки "pro" и "done".

export DSTDIR=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha/dst2k-ta/

source sdanalysis_env.sh

Затем скрипт sdmc_run_sdmc_spctr запускается командой вроде:

./sdmc_run_sdmc_spctr /disk/ta/work/user/zhezher/sdmc_fluka_he_qii-4/gmd_he_qii4_fluka/tothrow/DAT015713.corsika77100.qgsjetII.4.tar.gz.tothrow.txt /disk/ta/work/user/zhezher/sdmc_fluka_he_qii-4/gmd_he_qii4_fluka/tothrow/pro /disk/ta/work/user/zhezher/sdmc_fluka_he_qii-4/gmd_he_qii4_fluka/tothrow/dst

6. Создание *spctr-файлов.

За данную операцию отвечает скрипт sdmc_run_sdmc_conv_e2_to_spctr.

Необходимо задать два пути к папкам, которые указывают на папку со скриптами Димы:

export COMMON_RESOURCE_DIRECTORY_LOCAL=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha;
export SDDIR=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha;

export DSTDIR=/disk/ta/work/user/zhezher/prog/sdanalysis_2019_alpha/dst2k-ta/;
source sdanalysis_env.sh;

Скрипт запускается командой вроде:

./sdmc_run_sdmc_conv_e2_to_spctr dst_file /pro_folder/ /done_folder/

7. Реконструкция событий (МК)

В папку с названием p0 необходимо поместить спектральные файлы для минимальной энергии 1745, DAT??????_gea.dat.spctr1.1745.dst.gz.

Запускаем скрипт
Usage: mc_reco_parallel.sh MC_dir N_threads
        .dst.gz files are expected in MC_dir/p0

Данному скрипту необходимы скрипт rufldf.run (есть в стандартном наборе скриптов Димы) и скрипт Гриши nuf.i12aop (есть на cluster52:/net/minus/home/grisha/ta/sdanalysis).

8. Создание файлов *sc9

База MySQL есть только на cluster51, поэтому необходимо скопировать непосредственно на cluster51 следующие файлы:

***_ivanov.awk - реконструкция Иванова
***.sddb - реконструкция Гриши (*** обычно содержит в себе элемент, адронную модель и количество лет)

На cluster51 подключаемся к существующей для этого базе MySQL (она не привязана к конкретному пользователю и имеет свою авторизацию):
 
mysql -u tamember -pmemberta data
Здесь пароль указан без пробела, а data имя базы данных.

CREATE TABLE `nm_qgsii3_9yr_grisha` LIKE `pm_qgsii3_6yr_grisha`;
CREATE TABLE `nm_qgsii3_9yr_ivanov` LIKE `pm_qgsii3_6yr_ivanov`;
 
В этих командах слева имена новых таблиц (нужно изменить), а справа имена таблиц, которые используются, чтобы скопировать их структуру.

(команды внутри mysql>)
TRUNCATE nm_qgsii3_9yr_ivanov; LOAD DATA LOCAL INFILE 'ni_qgsii3.9yr_ivanov.awk' INTO TABLE nm_qgsii3_9yr_ivanov FIELDS TERMINATED BY ' ' (d, t, xcore, ycore, S800, theta, phi, @tmp, @tmp,E);
 
TRUNCATE nm_qgsii3_9yr_grisha; LOAD DATA LOCAL INFILE 'ni_qgsii3.9yr.sddb' INTO TABLE nm_qgsii3_9yr_grisha FIELDS TERMINATED BY ' ' (@tmp, d, t, xcore, ycore, S800, theta, phi, @tmp, @tmp, @E, tower, ndet, nborder, nsatur, ndouble, ndzero, chi2, eta, fiteta, a, max_signal, tot_signal, d_border, fsize, ngex, pcnt, asignal, asymm, pcnt_largest, xxyy, apcnt_u, apcnt_l, aop, aop_slope, aop_cnt, S25, S30, S35, S40, S45, event_num, parttype, corecounter, E_mc, theta_mc, phi_mc, height_1st, xcore_mc, ycore_mc, d_border_mc) SET E=IF(@E='inf', -1, @E);
 
UPDATE nm_qgsii3_9yr_grisha SET rnd=RAND();

Теперь выходим из mysql (команда quit) и через bash выполняем выборку из базы данных с записью в sc9-файл.

Если нужно поделить файл на три равные части (протоны, железо):

mysql -u tamember -pmemberta data -NBe "SELECT g.d,g.t,i.theta,i.phi,g.S800,i.E,0,0,g.ndet,g.ngex,g.chi2,g.a/sqrt(g.S800),g.aop,g.aop_slope,g.aop_cnt,g.S25/g.S800,g.S30/g.S800,g.S35/g.S800,g.S40/g.S800,g.S45/g.S800,g.asignal,g.asymm,g.pcnt,g.pcnt_largest,g.apcnt_u,g.apcnt_l,g.E_mc,g.theta_mc,g.phi_mc FROM pm_qgsii3_6yr_grisha g JOIN pm_qgsii3_6yr_ivanov i USING(d,t) WHERE i.theta<45 AND g.ndet-g.ngex>=7 AND g.chi2 < 5 AND g.d_border > 1.2 AND rnd<0.34 ORDER BY d,t;" > pm_train.sc9
mysql -u tamember -pmemberta data -NBe "SELECT g.d,g.t,i.theta,i.phi,g.S800,i.E,0,0,g.ndet,g.ngex,g.chi2,g.a/sqrt(g.S800),g.aop,g.aop_slope,g.aop_cnt,g.S25/g.S800,g.S30/g.S800,g.S35/g.S800,g.S40/g.S800,g.S45/g.S800,g.asignal,g.asymm,g.pcnt,g.pcnt_largest,g.apcnt_u,g.apcnt_l,g.E_mc,g.theta_mc,g.phi_mc FROM pm_qgsii3_6yr_grisha g JOIN pm_qgsii3_6yr_ivanov i USING(d,t) WHERE i.theta<45 AND g.ndet-g.ngex>=7 AND g.chi2 < 5 AND g.d_border > 1.2 AND rnd>0.34 AND rnd<0.67 ORDER BY d,t;" > pm_test.sc9
mysql -u tamember -pmemberta data -NBe "SELECT g.d,g.t,i.theta,i.phi,g.S800,i.E,0,0,g.ndet,g.ngex,g.chi2,g.a/sqrt(g.S800),g.aop,g.aop_slope,g.aop_cnt,g.S25/g.S800,g.S30/g.S800,g.S35/g.S800,g.S40/g.S800,g.S45/g.S800,g.asignal,g.asymm,g.pcnt,g.pcnt_largest,g.apcnt_u,g.apcnt_l,g.E_mc,g.theta_mc,g.phi_mc FROM pm_qgsii3_6yr_grisha g JOIN pm_qgsii3_6yr_ivanov i USING(d,t) WHERE i.theta<45 AND g.ndet-g.ngex>=7 AND g.chi2 < 5 AND g.d_border > 1.2 AND rnd>0.67 ORDER BY d,t;" > pm_test2.sc9

Если не нужно делить файл на части (гелий, азот):

mysql -u tamember -pmemberta -u tamember -pmemberta data -NBe "SELECT g.d,g.t,i.theta,i.phi,g.S800,i.E,0,0,g.ndet,g.ngex,g.chi2,g.a/sqrt(g.S800),g.aop,g.aop_slope,g.aop_cnt,g.S25/g.S800,g.S30/g.S800,g.S35/g.S800,g.S40/g.S800,g.S45/g.S800,g.asignal,g.asymm,g.pcnt,g.pcnt_largest,g.apcnt_u,g.apcnt_l,g.E_mc,g.theta_mc,g.phi_mc FROM nm_qgsii3_9yr_grisha g JOIN nm_qgsii3_9yr_ivanov i USING(d,t) WHERE i.theta<45 AND g.ndet-g.ngex>=7 AND g.chi2 < 5 AND g.d_border > 1.2 ORDER BY d,t;" > nm9.sc9
